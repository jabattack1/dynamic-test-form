{"version":3,"file":"static/webpack/static/development/pages/index.js.d2c473e3f7988727b9d6.hot-update.js","sources":["webpack:///./components/parent.js"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nimport Room1 from '../components/room1.js';\nimport Room2 from '../components/room2.js';\nimport Room3 from '../components/room3.js';\nimport Room4 from '../components/room4.js';\n\nconst GridWrap = styled.div`\n\twidth: calc(100%);\n\tmargin:auto 0;\n\tdisplay:block;\n`;\n\n\nconst Submit = styled.button`\n\tposition: relative;\n\tdisplay: flex;\n\tmargin-top: 10px;\n\tmargin-left: 10px;\n`;\n\nconst Clear = styled.button`\n\tposition: relative;\n\tdisplay: flex;\n\tmargin-top: 30px;\n\tmargin-left: 10px;\n`;\n\n\nclass Parent extends React.Component {\n\n\tconstructor(props){\n\n\t    super(props)\n\t    if(this.props.peter !== null){;\n\t\t\tlet initial = this.props.peter;\n\t\t\tthis.state = {\n\t\t\t\tchecked: initial.checked,\n\t\t\t\tadults1: initial.adults1,\n\t\t\t\tchildren1: initial.children1,\n\t\t\t\tadults2: initial.adults2,\n\t\t\t\tchildren2: initial.children2,\n\t\t\t\tadults3: initial.adults3,\n\t\t\t\tchildren3: initial.children3,\n\t\t\t\tadults4: initial.adults4,\n\t\t\t\tchildren4: initial.children4\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tthis.state = {\n\t\t\t\tchecked: '',\n\t\t\t\tadults1: 1,\n\t\t\t\tchildren1: 0,\n\t\t\t\tadults2: 1,\n\t\t\t\tchildren2: 0,\n\t\t\t\tadults3: 1,\n\t\t\t\tchildren3: 0,\n\t\t\t\tadults4: 1,\n\t\t\t\tchildren4: 0\n\t\t\t}\n\t\t}\t   \n\t}\n\n\tstate = {\n\n\t}\n\n\trender() {\n\t  \tconst room1Value = (value) => {\n\n\t  \t\tif(value[0] === true && this.state.checked === ''){\n\t    \t\tthis.setState({checked:''});\n\t    \t}\n\t    \telse if(value[0] === false){\n\t    \t\tthis.setState({checked:''});\n\t    \t}\n\t    \telse{\n\t    \t\tthis.setState({adults1: value[2], children1: value[3]},() => {\n    \t\t\t});\t    \t\t\n\t    \t}\n\t  \t};\n\n\t\tconst room2Value = (value) => {\n\n\t\t\tif(value[0] === true && this.state.checked === '' || this.state.checked < value[1]){\n\t    \t\tthis.setState({checked: parseInt(2)});\n\t    \t}\n\t    \telse if(value[0] === false){\n\t    \t\tthis.setState({checked:''});\n\t    \t}\n\t    \telse{\n\t    \t\tthis.setState({adults2: value[2], children2: value[3]},() => {\n    \t\t\t});\t    \t\t\n\t    \t}\n\t  \t};\n\n\t\tconst room3Value = (value) => {\n\n\t\t\tif(value[0] === true && this.state.checked === '' || this.state.checked < value[1]){\n\t    \t\tthis.setState({checked: parseInt(3)});\n\t    \t}\n\t    \telse if(value[0] === false && this.state.checked === value[1]){\n\t    \t\tthis.setState({checked: parseInt(2)});\n\t    \t}\n\t    \telse if(value[0] === false && this.state.checked > value[1]){\n\t    \t\tthis.setState({checked: parseInt(2)});\n\t    \t}\n\t    \telse if(value[0] === false){\n\t    \t\tthis.setState({checked:''});\n\t    \t}\n\t    \telse{\n\t    \t\tthis.setState({adults3: value[2], children3: value[3]},() => {\n    \t\t\t});\t    \t\t\n\t    \t}\n\t  \t};\n\n\t\tconst room4Value = (value) => {\n\n\t    \tif(value[0] === true && this.state.checked === '' || this.state.checked < value[1]){\n\t    \t\tthis.setState({checked:parseInt(4)});\n\t    \t}\n\t    \telse if(value[0] === false && this.state.checked === value[1]){\n\t    \t\tthis.setState({checked: parseInt(3)});\n\t    \t}\n\t    \telse if(value[0] === false){\n\t    \t\tthis.setState({checked:''});\n\t    \t}\n\t    \telse{\n\t    \t\tthis.setState({adults4: value[2], children4: value[3]},() => {\n    \t\t\t});\t    \t\t\n\t    \t}\n\t  \t};\n\n\t  \tlet children = '';\n\n\t  \tif(this.props.peter !== null){\n\n\t  \t\tlet chips = this.props.peter;\n\t  \t\tconsole.log(this.state.checked);\n\n\t  \t\tif(this.state.checked === 2){\n\t  \t\tchildren = \n\t  \t\t\t<GridWrap>\n\t\t\t\t    <Room1  fromChildToParentCallback={room1Value} data={chips} />\n\t\t\t\t\t<Room2  fromChildToParentCallback={room2Value} data={chips} check={true} />\n\t\t\t\t\t<Room3  fromChildToParentCallback={room3Value} data={chips} check={false} />\n\t\t\t\t\t<Room4  fromChildToParentCallback={room4Value} data={chips} check={false} /> \n\t\t\t\t</GridWrap>\n\t  \t}\n\t  \telse if(this.state.checked === 3){\n\t  \t\tchildren = \n\t  \t\t\t<GridWrap>\n\t\t\t\t    <Room1  fromChildToParentCallback={room1Value} data={chips} />\n\t\t\t\t\t<Room2  fromChildToParentCallback={room2Value} data={chips} check={true} />\n\t\t\t\t\t<Room3  fromChildToParentCallback={room3Value} data={chips} check={true} />\n\t\t\t\t\t<Room4  fromChildToParentCallback={room4Value} data={chips} check={false} /> \n\t\t\t\t</GridWrap>\n\t  \t}\n\n\t  \telse if(this.state.checked === 4){\n\t  \t\tchildren = \n\t  \t\t\t<GridWrap>\n\t\t\t\t    <Room1  fromChildToParentCallback={room1Value} data={chips} />\n\t\t\t\t\t<Room2  fromChildToParentCallback={room2Value} data={chips} check={true} />\n\t\t\t\t\t<Room3  fromChildToParentCallback={room3Value} data={chips} check={true} />\n\t\t\t\t\t<Room4  fromChildToParentCallback={room4Value} data={chips} check={true} /> \n\t\t\t\t</GridWrap>\n\t  \t}\n\t  \telse{\n\t  \t\tchildren =\n\t  \t\t\t<GridWrap>\n\t\t\t\t    <Room1  fromChildToParentCallback={room1Value} data={chips} />\n\t\t\t\t\t<Room2  fromChildToParentCallback={room2Value} data={chips} check={false} />\n\t\t\t\t\t<Room3  fromChildToParentCallback={room3Value} data={chips} check={false} />\n\t\t\t\t\t<Room4  fromChildToParentCallback={room4Value} data={chips} check={false} /> \n\t\t\t\t</GridWrap>\n\t  \t}\n\t\t}\n\t\telse{\n\t\t\tif(this.state.checked === 2){\n\t\t  \t\tchildren = \n\t\t  \t\t\t<GridWrap>\n\t\t\t\t\t    <Room1  fromChildToParentCallback={room1Value} />\n\t\t\t\t\t\t<Room2  fromChildToParentCallback={room2Value} check={true} />\n\t\t\t\t\t\t<Room3  fromChildToParentCallback={room3Value} check={false} />\n\t\t\t\t\t\t<Room4  fromChildToParentCallback={room4Value} check={false} /> \n\t\t\t\t\t</GridWrap>\n\t  \t\t}\n\t  \t\telse if(this.state.checked === 3){\n\t\t  \t\tchildren = \n\t\t  \t\t\t<GridWrap>\n\t\t\t\t\t    <Room1  fromChildToParentCallback={room1Value} />\n\t\t\t\t\t\t<Room2  fromChildToParentCallback={room2Value} check={true} />\n\t\t\t\t\t\t<Room3  fromChildToParentCallback={room3Value} check={true} />\n\t\t\t\t\t\t<Room4  fromChildToParentCallback={room4Value} check={false} /> \n\t\t\t\t\t</GridWrap>\n\t  \t\t}\n\n\t  \t\telse if(this.state.checked === 4){\n\t\t  \t\tchildren = \n\t\t  \t\t\t<GridWrap>\n\t\t\t\t\t    <Room1  fromChildToParentCallback={room1Value} />\n\t\t\t\t\t\t<Room2  fromChildToParentCallback={room2Value} check={true} />\n\t\t\t\t\t\t<Room3  fromChildToParentCallback={room3Value} check={true} />\n\t\t\t\t\t\t<Room4  fromChildToParentCallback={room4Value} check={true} /> \n\t\t\t\t\t</GridWrap>\n\t  \t\t}\n\t  \t\telse{\n\t  \t\t\tconsole.log('empty');\n\t\t  \t\tchildren =\n\t\t  \t\t\t<GridWrap>\n\t\t\t\t\t    <Room1  fromChildToParentCallback={room1Value} />\n\t\t\t\t\t\t<Room2  fromChildToParentCallback={room2Value} check={false} />\n\t\t\t\t\t\t<Room3  fromChildToParentCallback={room3Value} check={false} />\n\t\t\t\t\t\t<Room4  fromChildToParentCallback={room4Value} check={false} /> \n\t\t\t\t\t</GridWrap>\n\t  \t\t}\n\t\t}\n\n\t    return(\n\t    \t<GridWrap>\n\t    \t\t{children}\n\t\t\t\t<Submit type='button' onClick={() => this.storeStuff()}>Submit</Submit>\n\t\t\t\t<Clear type='button' onClick={() => this.eraseStuff()}>Clear</Clear>\n\t\t\t</GridWrap>\n\t\t)\n\t} \n\n\tstoreStuff(){\n\t\tlet status = this.state\n\t\tlocalStorage.setItem('submittedData', JSON.stringify(status));\n\t}\n\n\teraseStuff(){\n\t\tlocalStorage.clear();\n\t}\n\n}\n\nexport default Parent;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AACA;AAOA;;;;;AAEA;AAAA;AACA;AADA;AACA;AACA;AACA;AAHA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AA9BA;AA8BA;AACA;;;AAKA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;;AA9MA;AACA;AAiNA;;;;A","sourceRoot":""}